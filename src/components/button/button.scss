@import '../../styles/variables.scss';
@import '../../styles/mixins.scss';
@import '../../styles/inheritance.scss';
@import '../../styles/functions.scss';

$orange: hsl(14,  100%, 53%) !default;
$yellow: hsl(48,  100%, 67%) !default;
$green: hsl(129, 39%,  54%) !default;
$turquoise: hsl(171, 100%, 41%) !default;
$cyan: #00BCD4 !default;
$blue: hsl(217, 71%,  53%) !default;
$purple: hsl(271, 100%, 71%) !default;
$red: #D95350 !default;
$primary: $color-primary;

$orange-invert: findColorInvert($orange) !default;
$yellow-invert: findColorInvert($yellow) !default;
$green-invert: findColorInvert($green) !default;
$turquoise-invert: findColorInvert($turquoise) !default;
$cyan-invert: findColorInvert($cyan) !default;
$blue-invert: findColorInvert($blue) !default;
$purple-invert: findColorInvert($purple) !default;

$white: hsl(0, 0%, 100%) !default;
$light: hsl(0, 0%, 96%) !default;
$dark: hsl(225, 15%, 36%) !default;
$black: hsl(0, 0%, 4%) !default;

$info: $cyan !default;
$success: $green !default;
$warning: $yellow !default;
$danger: $red !default;

$primary-invert  : findColorInvert($primary) !default;
$primary-light   : findLightColor($primary) !default;
$primary-dark    : findDarkColor($primary) !default;
$info-invert     : findColorInvert($info) !default;
$info-light      : findLightColor($info) !default;
$info-dark       : findDarkColor($info) !default;
$success-invert  : findColorInvert($success) !default;
$success-light   : findLightColor($success) !default;
$success-dark    : findDarkColor($success) !default;
$warning-invert  : findColorInvert($warning) !default;
$warning-light   : findLightColor($warning) !default;
$warning-dark    : findDarkColor($warning) !default;
$danger-invert   : findColorInvert($danger) !default;
$danger-light    : findLightColor($danger) !default;
$danger-dark     : findDarkColor($danger) !default;
$light-invert    : findColorInvert($light) !default;
$dark-invert     : findColorInvert($dark) !default;

$button-height: 2.875em !default;
$button-color: $color-text-primary !default;
$button-background-color: $color-white !default;

$button-border-color: #dbdbdb !default;
$button-border-width: 1px !default;

$button-padding-vertical: calc(0.5em - #{$button-border-width}) !default;
$button-padding-horizontal: 1em !default;

$button-hover-color: $color-text-primary !default;
$button-hover-border-color: #b5b5b5 !default;

$button-focus-color: $color-text-primary !default;
$button-focus-border-color: $color-primary !default;
$button-focus-box-shadow-size: 0 0 0 0.125em !default;
$button-focus-box-shadow-color: rgba(50,115,220,.25) !default;

$button-active-color: $color-text-primary !default;
$button-active-border-color: #4a4a4a !default;

//$button-text-color: $text !default;
//$button-text-hover-background-color: $background !default;
//$button-text-hover-color: $text-strong !default;
//
$button-disabled-background-color: $white !default;
$button-disabled-border-color: hsl(0, 0%, 86%) !default;
$button-disabled-shadow: none !default;
$button-disabled-opacity: 0.5 !default;
//
//$button-static-color: $grey !default;
//$button-static-background-color: $white-ter !default;
//$button-static-border-color: $grey-lighter !default;

$colors: mergeColorMaps((
    "white": ($white, $black),
    "black": ($black, $white),
    "light": ($light, $light-invert),
    "dark": ($dark, $dark-invert),
    "primary": ($primary, $primary-invert, $primary-light, $primary-dark),
    "info": ($info, $info-invert, $info-light, $info-dark),
    "success": ($success, $success-invert, $success-light, $success-dark),
    "warning": ($warning, $warning-invert, $warning-light, $warning-dark),
    "danger": ($danger, $danger-invert, $danger-light, $danger-dark)), null) !default;

.button {
    background-color: $button-background-color;
    color: $button-color;
    cursor: pointer;
    @include justify-content(center);
    padding: $button-padding-vertical $button-padding-horizontal;
    text-align: center;
    white-space: nowrap;
    -webkit-appearance: none;
    align-items: center;
    border: $button-border-width solid $button-border-color;
    border-radius: 4px;
    box-shadow: none;
    display: inline-flex;
    font-size: 1rem;
    line-height: 1.5;
    height: $button-height;
    @include box-sizing(border-box);

    &:hover {
        border-color: $button-hover-border-color;
        color: $button-hover-color;
    }

    &:focus {
        border-color: $button-focus-border-color;
        color: $button-hover-color;

        &:not(:active) {
            @include box-shadow($button-focus-box-shadow-size $button-focus-box-shadow-color);
        }
    }

    &:active {
        border-color: $button-active-border-color;
        color: $button-active-color;
    }

    &.is-small {
        border-radius: $border-radius-small;
        font-size: $font-size-small;
    }

    &.is-medium {
        font-size: $font-size-medium;
    }

    &.is-large {
        font-size: $font-size-large;
    }

    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);

        &.is-#{$name} {
            background-color: $color;
            border-color: transparent;
            color: $color-invert;

            &:hover {
                background-color: darken($color, 3%);
                border-color: transparent;
                color: $color-invert;
            }

            &:focus {
                border-color: transparent;
                color: $color-invert;

                &:not(:active) {
                    @include box-shadow($button-focus-box-shadow-size rgba($color, 0.25));
                }
            }

            &:active {
                background-color: darken($color, 5%);
                border-color: transparent;
                color: $color-invert;
            }

            &:disabled, &.is-disabled {
                background-color: $color;
                border-color: transparent;
                box-shadow: none;
            }

            &.is-inverter {
                background-color: $color-invert;
                color: $color;

                &:hover {
                    background-color: darken($color-invert, 5%);
                }

                &:disabled, &.is-disabled {
                    background-color: $color-invert;
                    border-color: transparent;
                    box-shadow: none;
                    color: $color;
                }
            }

            &.is-loading {
                &::after {
                    border-color: transparent transparent $color-invert $color-invert !important;
                }
            }

            &.is-outlined {
                background-color: transparent;
                border-color: $color;
                color: $color;

                &:hover, &:focus {
                background-color: $color;
                border-color: $color;
                color: $color-invert;
                }

                &.is-loading {
                    &::after {
                        border-color: transparent transparent $color $color !important;
                    }

                    &:hover, &:focus {
                        &::after {
                        border-color: transparent transparent $color-invert $color-invert !important;
                        }
                    }
                }

                &:disabled, &.is-disabled {
                    background-color: transparent;
                    border-color: $color;
                    box-shadow: none;
                    color: $color;
                }
            }
        }
    }

    &:disabled, &.is-disabled {
        background-color: $button-disabled-background-color;
        border-color: $button-disabled-border-color;
        box-shadow: $button-disabled-shadow;
        opacity: $button-disabled-opacity;
        cursor: not-allowed;
    }

    &.is-loading {
        color: transparent !important;
        pointer-events: none;
        position: relative;
        opacity: .5;

        &::after {
            @extend %loading;
        }
    }

    &.is-rounded {
        border-radius: $border-radius-rounded;
        padding-left: 1em;
        padding-right: 1em;
    }

    &.is-fullwidth {
        width: 100%;
    }

    .icon {
        &, &.is-small, &.is-medium, &.is-large {
            height: 1.5em;
            width: 1.5em;
            @include flexbox();
            @include align-items(center);
            @include justify-content(center);
        }

        &:first-child:not(:last-child) {
            // margin-left: calc(-0.5em - #{$button-border-width});
            margin-right: .5em;
        }

        &:last-child:not(:first-child) {
            margin-left: .5em;
            // margin-right: calc(-0.5em - #{$button-border-width});
        }

        &:first-child:last-child {
            margin-left: calc(-0.5em - #{$button-border-width});
            margin-right: calc(-0.5em - #{$button-border-width});
        }
    }
}

.buttons {
    @include flexbox();
    @include align-items(center);
    @include flex-wrap(wrap);
    @include justify-content(flex-start);

    .button {
        margin-bottom: 0.5rem;

        &:not(:first-child) {
            margin-left: 0.75rem;
        }
    }

    &:last-child {
        margin-bottom: -0.5rem;
    }

    &:not(:last-child) {
        margin-bottom: 1rem;
    }

    &.is-centered {
        @include justify-content(center);
    }

    &.is-right {
        @include justify-content(flex-end);
    }

    &.has-addons {
        .button {
            &:not(:last-child) {
                border-bottom-right-radius: 0;
                border-top-right-radius: 0;
                margin-right: -1px;
            }

            &:not(:first-child) {
                border-bottom-left-radius: 0;
                border-top-left-radius: 0;
            }

            &:last-child {
                margin-right: 0;
            }

            &:focus, &:active {
                z-index: 3;
            }

            &:hover {
                z-index: 2;
            }

            &.is-selected {
                background-color: $color-primary;
                color: $color-white;
            }
        }
    }
}
